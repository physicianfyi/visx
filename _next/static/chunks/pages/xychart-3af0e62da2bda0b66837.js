(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[2520],{59576:function(n,e,t){"use strict";t.d(e,{Z:function(){return l}});var r=t(76422),a=(t(2784),t(48090)),o=t(18476),i=t.n(o),s=(t(73113),t(15961),t(2847),t(52322));function c(n){var e=n.lines;return(0,s.jsx)("span",{"aria-hidden":"true",className:"line-numbers-rows",children:e.map((function(n,t){return(0,s.jsx)("span",{},"line-number-".concat(e.length,"-").concat(t))}))})}function l(n){var e=n.children,t=e.match(/\n(?!$)/g),o=t?t.length+1:1,l=new Array(o+1).fill(1),d=[a.renderToString((0,s.jsx)(c,{lines:l})),i().highlight(e,i().languages.ts,"tsx")].join("");return(0,s.jsxs)("pre",{className:"jsx-3645412256 codeblock line-numbers",children:[(0,s.jsx)("code",{dangerouslySetInnerHTML:{__html:d},className:"jsx-3645412256"}),(0,s.jsx)(r.default,{id:"3645412256",children:[".codeblock.jsx-3645412256 code.jsx-3645412256{display:block;padding:0 0 0 1.5rem;border-radius:0;font-weight:300;font-size:14px;line-height:1.4em;background:white;color:#495057;}",".codeblock.line-numbers.jsx-3645412256{padding-left:0;}","@media (max-width:600px){.codeblock.jsx-3645412256 code.jsx-3645412256{font-size:10px;padding:0;pointer-events:none;}}"]})]})}try{Codeblock.displayName="Codeblock",Codeblock.__docgenInfo={description:"",displayName:"Codeblock",props:{}},"undefined"!==typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Codeblock.tsx#Codeblock"]={docgenInfo:Codeblock.__docgenInfo,name:"Codeblock",path:"src/components/Codeblock.tsx#Codeblock"})}catch(d){}},73545:function(n,e,t){"use strict";t.d(e,{Z:function(){return g}});var r=t(76422),a=t(2784),o=t(72779),i=t.n(o),s=t(60594),c=t(52322),l=(0,c.jsxs)("svg",{xmlns:"http://www.w3.org/2000/svg",width:"20",height:"20",viewBox:"0 0 24 24",fill:"none",stroke:"currentColor",strokeWidth:"2",strokeLinecap:"round",strokeLinejoin:"round",children:[(0,c.jsx)("path",{d:"M21 16V8a2 2 0 0 0-1-1.73l-7-4a2 2 0 0 0-2 0l-7 4A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73l7 4a2 2 0 0 0 2 0l7-4A2 2 0 0 0 21 16z"}),(0,c.jsx)("polyline",{points:"7.5 4.21 12 6.81 16.5 4.21"}),(0,c.jsx)("polyline",{points:"7.5 19.79 7.5 14.6 3 12"}),(0,c.jsx)("polyline",{points:"21 12 16.5 14.6 16.5 19.79"}),(0,c.jsx)("polyline",{points:"3.27 6.96 12 12.01 20.73 6.96"}),(0,c.jsx)("line",{x1:"12",y1:"22.08",x2:"12",y2:"12"})]});function d(n){var e=n.branch,t=void 0===e?"master":e,a=n.exampleDirectoryName;return a?(0,c.jsxs)(c.Fragment,{children:[(0,c.jsxs)("a",{href:"https://codesandbox.io/s/github/airbnb/visx/tree/".concat(t,"/packages/visx-demo/src/sandboxes/").concat(a),rel:"nofollow noopener noreferrer",target:"_blank",className:"jsx-3803197895 sandbox-link",children:[l,"\xa0Try it on CodeSandbox"]}),(0,c.jsx)(r.default,{id:"3803197895",children:[".sandbox-link.jsx-3803197895{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;font-size:12px;color:#222;}"]})]}):null}var u=d;try{d.displayName="CodeSandboxLink",d.__docgenInfo={description:"",displayName:"CodeSandboxLink",props:{branch:{defaultValue:{value:"master"},description:"",name:"branch",required:!1,type:{name:"string"}},exampleDirectoryName:{defaultValue:null,description:"",name:"exampleDirectoryName",required:!0,type:{name:"string"}}}},"undefined"!==typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/CodeSandboxLink.tsx#CodeSandboxLink"]={docgenInfo:d.__docgenInfo,name:"CodeSandboxLink",path:"src/components/CodeSandboxLink.tsx#CodeSandboxLink"})}catch(b){}var p=t(89022),f=t(59576),m=t(39097);function y(n){var e=n.packageName,t=function(n){var e=n.split("@visx/")[1];return e?"docs/".concat(e):null}(e);return t?(0,c.jsx)(m.default,{href:t,children:(0,c.jsx)("a",{children:e})}):null}var x=y;try{y.displayName="VisxDocLink",y.__docgenInfo={description:"",displayName:"VisxDocLink",props:{packageName:{defaultValue:null,description:"",name:"packageName",required:!0,type:{name:"string"}}}},"undefined"!==typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/VisxDocLink.tsx#VisxDocLink"]={docgenInfo:y.__docgenInfo,name:"VisxDocLink",path:"src/components/VisxDocLink.tsx#VisxDocLink"})}catch(b){}var h=t(48422),g=(0,s.Z)((function(n){var e=n.screenWidth,t=n.children,o=n.title,s=n.component,l=n.shadow,d=void 0!==l&&l,m=n.events,y=void 0!==m&&m,g=n.margin,b=n.description,k=n.codeSandboxDirectoryName,v=n.packageJson,A=Math.min(800,(e||0)-40),S=.6*A,w=(0,a.useMemo)((function(){return(0,h.Z)(v)}),[v]);return(0,c.jsxs)(p.Z,{title:o,children:[(0,c.jsx)("div",{className:"jsx-1780118371 container",children:(0,c.jsxs)("div",{style:{width:A},className:"jsx-1780118371",children:[(0,c.jsx)("h1",{className:"jsx-1780118371",children:o}),(0,c.jsx)("div",{className:"jsx-1780118371 "+(i()(!!d&&"shadow",o.split(" ").join("-"),"chart")||""),children:a.createElement(s,{width:A,height:S,margin:g,events:y})}),b&&a.createElement(b,{width:A,height:S}),k&&(0,c.jsx)("div",{className:"jsx-1780118371 sandbox-link",children:(0,c.jsx)(u,{exampleDirectoryName:k})}),w.length>0&&(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)("h2",{className:"jsx-1780118371",children:"Documentation"}),(0,c.jsx)("div",{className:"jsx-1780118371 doc-links",children:w.map((function(n){return(0,c.jsx)(x,{packageName:n},n)}))})]}),t&&(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)("h2",{className:"jsx-1780118371",children:"Code"}),(0,c.jsx)("div",{className:"jsx-1780118371 code",children:(0,c.jsx)(f.Z,{children:t})})]})]})}),(0,c.jsx)(r.default,{id:"1780118371",children:[".container.jsx-1780118371{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;overflow:hidden;margin-bottom:40px;}",".container.jsx-1780118371 h1.jsx-1780118371{margin-top:15px;line-height:0.9em;-webkit-letter-spacing:-0.03em;-moz-letter-spacing:-0.03em;-ms-letter-spacing:-0.03em;letter-spacing:-0.03em;}",".container.jsx-1780118371 h2.jsx-1780118371{margin-top:15px;margin-bottom:5px;}",".chart.jsx-1780118371{border-radius:14px;}",".shadow.jsx-1780118371{border-radius:14px;box-shadow:0 1px 6px rgba(0,0,0,0.1);}",".sandbox-link.jsx-1780118371{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:end;-webkit-justify-content:flex-end;-ms-flex-pack:end;justify-content:flex-end;}",".doc-links.jsx-1780118371{font-size:13px;}",".doc-links.jsx-1780118371 a{margin-right:6px;}"]})]})}));try{__type.displayName="__type",__type.__docgenInfo={description:"",displayName:"__type",props:{title:{defaultValue:null,description:"",name:"title",required:!0,type:{name:"string"}},component:{defaultValue:null,description:"",name:"component",required:!0,type:{name:"Component<ShowProvidedProps>"}},codeSandboxDirectoryName:{defaultValue:null,description:"",name:"codeSandboxDirectoryName",required:!1,type:{name:"string"}},shadow:{defaultValue:null,description:"",name:"shadow",required:!1,type:{name:"boolean"}},events:{defaultValue:null,description:"",name:"events",required:!1,type:{name:"boolean"}},margin:{defaultValue:null,description:"",name:"margin",required:!1,type:{name:"MarginShape"}},description:{defaultValue:null,description:"",name:"description",required:!1,type:{name:"Component<{ width: number; height: number; }>"}},windowResizeDebounceTime:{defaultValue:null,description:"",name:"windowResizeDebounceTime",required:!1,type:{name:"number"}},packageJson:{defaultValue:null,description:"",name:"packageJson",required:!1,type:{name:"PackageJson"}},screenWidth:{defaultValue:null,description:"",name:"screenWidth",required:!1,type:{name:"number"}},screenHeight:{defaultValue:null,description:"",name:"screenHeight",required:!1,type:{name:"number"}}}},"undefined"!==typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Show.tsx#__type"]={docgenInfo:__type.__docgenInfo,name:"__type",path:"src/components/Show.tsx#__type"})}catch(b){}},48422:function(n,e,t){"use strict";function r(n){var e,t=[];return Object.keys(null!==(e=null===n||void 0===n?void 0:n.dependencies)&&void 0!==e?e:{}).forEach((function(n){n.startsWith("@visx/")&&t.push(n)})),t}t.d(e,{Z:function(){return r}});try{r.displayName="extractVisxDepsFromPackageJson",r.__docgenInfo={description:"",displayName:"extractVisxDepsFromPackageJson",props:{dependencies:{defaultValue:null,description:"",name:"dependencies",required:!1,type:{name:"{ [packageName: string]: string; }"}}}},"undefined"!==typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/util/extractVisxDepsFromPackageJson.ts#extractVisxDepsFromPackageJson"]={docgenInfo:r.__docgenInfo,name:"extractVisxDepsFromPackageJson",path:"src/components/util/extractVisxDepsFromPackageJson.ts#extractVisxDepsFromPackageJson"})}catch(a){}},38927:function(n,e,t){"use strict";t.r(e),t.d(e,{default:function(){return s}});t(2784);var r=t(55984),a=t(65542),o=t(73545),i=t(52322);var s=function(){return(0,i.jsx)(o.Z,{component:r.Z,title:"XYChart",codeSandboxDirectoryName:"visx-xychart",packageJson:a,children:"import React from 'react';\nimport { CityTemperature } from '@visx/mock-data/lib/mocks/cityTemperature';\n\nimport ExampleControls from './ExampleControls';\nimport CustomChartBackground from './CustomChartBackground';\n\nexport type XYChartProps = {\n  width: number;\n  height: number;\n};\n\ntype City = 'San Francisco' | 'New York' | 'Austin';\n\nexport default function Example({ height }: XYChartProps) {\n  return (\n    <ExampleControls>\n      {({\n        accessors,\n        animationTrajectory,\n        annotationDataKey,\n        annotationDatum,\n        annotationLabelPosition,\n        annotationType,\n        colorAccessorFactory,\n        config,\n        curve,\n        data,\n        editAnnotationLabelPosition,\n        numTicks,\n        renderAreaSeries,\n        renderAreaStack,\n        renderBarGroup,\n        renderBarSeries,\n        renderBarStack,\n        renderGlyph,\n        renderGlyphSeries,\n        enableTooltipGlyph,\n        renderTooltipGlyph,\n        renderHorizontally,\n        renderLineSeries,\n        setAnnotationDataIndex,\n        setAnnotationDataKey,\n        setAnnotationLabelPosition,\n        sharedTooltip,\n        showGridColumns,\n        showGridRows,\n        showHorizontalCrosshair,\n        showTooltip,\n        showVerticalCrosshair,\n        snapTooltipToDatumX,\n        snapTooltipToDatumY,\n        stackOffset,\n        theme,\n        xAxisOrientation,\n        yAxisOrientation,\n\n        // components are animated or not depending on selection\n        Annotation,\n        AreaSeries,\n        AreaStack,\n        Axis,\n        BarGroup,\n        BarSeries,\n        BarStack,\n        GlyphSeries,\n        Grid,\n        LineSeries,\n        AnnotationCircleSubject,\n        AnnotationConnector,\n        AnnotationLabel,\n        AnnotationLineSubject,\n        Tooltip,\n        XYChart,\n      }) => (\n        <XYChart\n          theme={theme}\n          xScale={config.x}\n          yScale={config.y}\n          height={Math.min(400, height)}\n          captureEvents={!editAnnotationLabelPosition}\n          onPointerUp={(d) => {\n            setAnnotationDataKey(d.key as 'New York' | 'San Francisco' | 'Austin');\n            setAnnotationDataIndex(d.index);\n          }}\n        >\n          <CustomChartBackground />\n          <Grid\n            key={`grid-${animationTrajectory}`} // force animate on update\n            rows={showGridRows}\n            columns={showGridColumns}\n            animationTrajectory={animationTrajectory}\n            numTicks={numTicks}\n          />\n          {renderBarStack && (\n            <BarStack offset={stackOffset}>\n              <BarSeries\n                dataKey=\"New York\"\n                data={data}\n                xAccessor={accessors.x['New York']}\n                yAccessor={accessors.y['New York']}\n              />\n              <BarSeries\n                dataKey=\"San Francisco\"\n                data={data}\n                xAccessor={accessors.x['San Francisco']}\n                yAccessor={accessors.y['San Francisco']}\n              />\n              <BarSeries\n                dataKey=\"Austin\"\n                data={data}\n                xAccessor={accessors.x.Austin}\n                yAccessor={accessors.y.Austin}\n              />\n            </BarStack>\n          )}\n          {renderBarGroup && (\n            <BarGroup>\n              <BarSeries\n                dataKey=\"New York\"\n                data={data}\n                xAccessor={accessors.x['New York']}\n                yAccessor={accessors.y['New York']}\n                colorAccessor={colorAccessorFactory('New York')}\n              />\n              <BarSeries\n                dataKey=\"San Francisco\"\n                data={data}\n                xAccessor={accessors.x['San Francisco']}\n                yAccessor={accessors.y['San Francisco']}\n                colorAccessor={colorAccessorFactory('San Francisco')}\n              />\n              <BarSeries\n                dataKey=\"Austin\"\n                data={data}\n                xAccessor={accessors.x.Austin}\n                yAccessor={accessors.y.Austin}\n                colorAccessor={colorAccessorFactory('Austin')}\n              />\n            </BarGroup>\n          )}\n          {renderBarSeries && (\n            <BarSeries\n              dataKey=\"New York\"\n              data={data}\n              xAccessor={accessors.x['New York']}\n              yAccessor={accessors.y['New York']}\n              colorAccessor={colorAccessorFactory('New York')}\n            />\n          )}\n          {renderAreaSeries && (\n            <>\n              <AreaSeries\n                dataKey=\"Austin\"\n                data={data}\n                xAccessor={accessors.x.Austin}\n                yAccessor={accessors.y.Austin}\n                fillOpacity={0.4}\n                curve={curve}\n              />\n              <AreaSeries\n                dataKey=\"New York\"\n                data={data}\n                xAccessor={accessors.x['New York']}\n                yAccessor={accessors.y['New York']}\n                fillOpacity={0.4}\n                curve={curve}\n              />\n              <AreaSeries\n                dataKey=\"San Francisco\"\n                data={data}\n                xAccessor={accessors.x['San Francisco']}\n                yAccessor={accessors.y['San Francisco']}\n                fillOpacity={0.4}\n                curve={curve}\n              />\n            </>\n          )}\n          {renderAreaStack && (\n            <AreaStack curve={curve} offset={stackOffset} renderLine={stackOffset !== 'wiggle'}>\n              <AreaSeries\n                dataKey=\"Austin\"\n                data={data}\n                xAccessor={accessors.x.Austin}\n                yAccessor={accessors.y.Austin}\n                fillOpacity={0.4}\n              />\n              <AreaSeries\n                dataKey=\"New York\"\n                data={data}\n                xAccessor={accessors.x['New York']}\n                yAccessor={accessors.y['New York']}\n                fillOpacity={0.4}\n              />\n              <AreaSeries\n                dataKey=\"San Francisco\"\n                data={data}\n                xAccessor={accessors.x['San Francisco']}\n                yAccessor={accessors.y['San Francisco']}\n                fillOpacity={0.4}\n              />\n            </AreaStack>\n          )}\n          {renderLineSeries && (\n            <>\n              <LineSeries\n                dataKey=\"Austin\"\n                data={data}\n                xAccessor={accessors.x.Austin}\n                yAccessor={accessors.y.Austin}\n                curve={curve}\n              />\n              {!renderBarSeries && (\n                <LineSeries\n                  dataKey=\"New York\"\n                  data={data}\n                  xAccessor={accessors.x['New York']}\n                  yAccessor={accessors.y['New York']}\n                  curve={curve}\n                />\n              )}\n              <LineSeries\n                dataKey=\"San Francisco\"\n                data={data}\n                xAccessor={accessors.x['San Francisco']}\n                yAccessor={accessors.y['San Francisco']}\n                curve={curve}\n              />\n            </>\n          )}\n          {renderGlyphSeries && (\n            <GlyphSeries\n              dataKey=\"San Francisco\"\n              data={data}\n              xAccessor={accessors.x['San Francisco']}\n              yAccessor={accessors.y['San Francisco']}\n              renderGlyph={renderGlyph}\n              colorAccessor={colorAccessorFactory('San Francisco')}\n            />\n          )}\n          <Axis\n            key={`time-axis-${animationTrajectory}-${renderHorizontally}`}\n            orientation={renderHorizontally ? yAxisOrientation : xAxisOrientation}\n            numTicks={numTicks}\n            animationTrajectory={animationTrajectory}\n          />\n          <Axis\n            key={`temp-axis-${animationTrajectory}-${renderHorizontally}`}\n            label={\n              stackOffset == null\n                ? 'Temperature (\xb0F)'\n                : stackOffset === 'expand'\n                ? 'Fraction of total temperature'\n                : ''\n            }\n            orientation={renderHorizontally ? xAxisOrientation : yAxisOrientation}\n            numTicks={numTicks}\n            animationTrajectory={animationTrajectory}\n            // values don't make sense in stream graph\n            tickFormat={stackOffset === 'wiggle' ? () => '' : undefined}\n          />\n          {annotationDataKey && annotationDatum && (\n            <Annotation\n              dataKey={annotationDataKey}\n              datum={annotationDatum}\n              dx={annotationLabelPosition.dx}\n              dy={annotationLabelPosition.dy}\n              editable={editAnnotationLabelPosition}\n              canEditSubject={false}\n              onDragEnd={({ dx, dy }) => setAnnotationLabelPosition({ dx, dy })}\n            >\n              <AnnotationConnector />\n              {annotationType === 'circle' ? (\n                <AnnotationCircleSubject />\n              ) : (\n                <AnnotationLineSubject />\n              )}\n              <AnnotationLabel\n                title={annotationDataKey}\n                subtitle={`${annotationDatum.date}, ${annotationDatum[annotationDataKey]}\xb0F`}\n                width={135}\n                backgroundProps={{\n                  stroke: theme.gridStyles.stroke,\n                  strokeOpacity: 0.5,\n                  fillOpacity: 0.8,\n                }}\n              />\n            </Annotation>\n          )}\n          {showTooltip && (\n            <Tooltip<CityTemperature>\n              showHorizontalCrosshair={showHorizontalCrosshair}\n              showVerticalCrosshair={showVerticalCrosshair}\n              snapTooltipToDatumX={snapTooltipToDatumX}\n              snapTooltipToDatumY={snapTooltipToDatumY}\n              showDatumGlyph={(snapTooltipToDatumX || snapTooltipToDatumY) && !renderBarGroup}\n              showSeriesGlyphs={sharedTooltip && !renderBarGroup}\n              renderGlyph={enableTooltipGlyph ? renderTooltipGlyph : undefined}\n              renderTooltip={({ tooltipData, colorScale }) => (\n                <>\n                  {/** date */}\n                  {(tooltipData?.nearestDatum?.datum &&\n                    accessors.date(tooltipData?.nearestDatum?.datum)) ||\n                    'No date'}\n                  <br />\n                  <br />\n                  {/** temperatures */}\n                  {(\n                    (sharedTooltip\n                      ? Object.keys(tooltipData?.datumByKey ?? {})\n                      : [tooltipData?.nearestDatum?.key]\n                    ).filter((city) => city) as City[]\n                  ).map((city) => {\n                    const temperature =\n                      tooltipData?.nearestDatum?.datum &&\n                      accessors[renderHorizontally ? 'x' : 'y'][city](\n                        tooltipData?.nearestDatum?.datum,\n                      );\n\n                    return (\n                      <div key={city}>\n                        <em\n                          style={{\n                            color: colorScale?.(city),\n                            textDecoration:\n                              tooltipData?.nearestDatum?.key === city ? 'underline' : undefined,\n                          }}\n                        >\n                          {city}\n                        </em>{' '}\n                        {temperature == null || Number.isNaN(temperature)\n                          ? '\u2013'\n                          : `${temperature}\xb0 F`}\n                      </div>\n                    );\n                  })}\n                </>\n              )}\n            />\n          )}\n        </XYChart>\n      )}\n    </ExampleControls>\n  );\n}\n"})}},94385:function(n,e,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/xychart",function(){return t(38927)}])},14557:function(n,e,t){"use strict";t.d(e,{Z:function(){return l}});var r=t(13980),a=t.n(r),o=t(2784),i=t(72779),s=t.n(i),c=t(89549);function l(n){var e=n.top,t=void 0===e?0:e,r=n.left,a=void 0===r?0:r,i=n.className,l=n.children;return o.createElement(c.Z,{className:s()("visx-glyph",i),top:t,left:a},l)}l.propTypes={top:a().number,left:a().number,className:a().string,children:a().node}},24766:function(n,e,t){"use strict";t.d(e,{Z:function(){return f}});var r=t(13980),a=t.n(r),o=t(2784),i=t(72779),s=t.n(i),c=t(24037),l=t(86707),d=t(14557),u=["children","className","top","left","size"];function p(){return(p=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n}).apply(this,arguments)}function f(n){var e=n.children,t=n.className,r=n.top,a=n.left,i=n.size,f=function(n,e){if(null==n)return{};var t,r,a={},o=Object.keys(n);for(r=0;r<o.length;r++)t=o[r],e.indexOf(t)>=0||(a[t]=n[t]);return a}(n,u),m=(0,c.Z)();return m.type(l.Z),("number"===typeof i||i)&&m.size(i),e?o.createElement(o.Fragment,null,e({path:m})):o.createElement(d.Z,{top:r,left:a},o.createElement("path",p({className:s()("visx-glyph-star",t),d:m()||""},f)))}f.propTypes={children:a().func,className:a().string,top:a().number,left:a().number,size:a().oneOfType([a().number,a().func])}},95642:function(n,e,t){"use strict";e.Z=p;var r=c(t(13980)),a=c(t(99788)),o=function(n,e){if(!e&&n&&n.__esModule)return n;if(null===n||"object"!==typeof n&&"function"!==typeof n)return{default:n};var t=s(e);if(t&&t.has(n))return t.get(n);var r={},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var o in n)if("default"!==o&&Object.prototype.hasOwnProperty.call(n,o)){var i=a?Object.getOwnPropertyDescriptor(n,o):null;i&&(i.get||i.set)?Object.defineProperty(r,o,i):r[o]=n[o]}r.default=n,t&&t.set(n,r);return r}(t(2784)),i=["className","children","debounceTime","ignoreDimensions","parentSizeStyles","enableDebounceLeadingCall","resizeObserverPolyfill"];function s(n){if("function"!==typeof WeakMap)return null;var e=new WeakMap,t=new WeakMap;return(s=function(n){return n?t:e})(n)}function c(n){return n&&n.__esModule?n:{default:n}}function l(){return(l=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n}).apply(this,arguments)}var d=[],u={width:"100%",height:"100%"};function p(n){var e=n.className,t=n.children,r=n.debounceTime,s=void 0===r?300:r,c=n.ignoreDimensions,p=void 0===c?d:c,f=n.parentSizeStyles,m=void 0===f?u:f,y=n.enableDebounceLeadingCall,x=void 0===y||y,h=n.resizeObserverPolyfill,g=function(n,e){if(null==n)return{};var t,r,a={},o=Object.keys(n);for(r=0;r<o.length;r++)t=o[r],e.indexOf(t)>=0||(a[t]=n[t]);return a}(n,i),b=(0,o.useRef)(null),k=(0,o.useRef)(0),v=(0,o.useState)({width:0,height:0,top:0,left:0}),A=v[0],S=v[1],w=(0,o.useMemo)((function(){var n=Array.isArray(p)?p:[p];return(0,a.default)((function(e){S((function(t){return Object.keys(t).filter((function(n){return t[n]!==e[n]})).every((function(e){return n.includes(e)}))?t:e}))}),s,{leading:x})}),[s,x,p]);return(0,o.useEffect)((function(){var n=new(h||window.ResizeObserver)((function(n){n.forEach((function(n){var e,t=null!=(e=null==n?void 0:n.contentRect)?e:{},r=t.left,a=t.top,o=t.width,i=t.height;k.current=window.requestAnimationFrame((function(){w({width:o,height:i,top:a,left:r})}))}))}));return b.current&&n.observe(b.current),function(){window.cancelAnimationFrame(k.current),n.disconnect(),w.cancel()}}),[w,h]),o.default.createElement("div",l({style:m,ref:b,className:e},g),t(l({},A,{ref:b.current,resize:w})))}p.propTypes={className:r.default.string,debounceTime:r.default.number,enableDebounceLeadingCall:r.default.bool,ignoreDimensions:r.default.oneOfType([r.default.any,r.default.arrayOf(r.default.any)]),children:r.default.func.isRequired}},60594:function(n,e,t){"use strict";e.Z=function(n){var e;return(e=function(e){var t,r;function i(){for(var n,t=arguments.length,r=new Array(t),o=0;o<t;o++)r[o]=arguments[o];return(n=e.call.apply(e,[this].concat(r))||this).state={screenWidth:void 0,screenHeight:void 0},n.resize=(0,a.default)((function(){n.setState((function(){return{screenWidth:window.innerWidth,screenHeight:window.innerHeight}}))}),n.props.windowResizeDebounceTime,{leading:n.props.enableDebounceLeadingCall}),n}r=e,(t=i).prototype=Object.create(r.prototype),t.prototype.constructor=t,c(t,r);var l=i.prototype;return l.componentDidMount=function(){window.addEventListener("resize",this.resize,!1),this.resize()},l.componentWillUnmount=function(){window.removeEventListener("resize",this.resize,!1),this.resize.cancel()},l.render=function(){var e=this.state,t=e.screenWidth,r=e.screenHeight;return null==t||null==r?null:o.default.createElement(n,s({screenWidth:t,screenHeight:r},this.props))},i}(o.default.Component)).propTypes={screenWidth:r.default.number,screenHeight:r.default.number},e.defaultProps={windowResizeDebounceTime:300,enableDebounceLeadingCall:!0},e};var r=i(t(13980)),a=i(t(99788)),o=i(t(2784));function i(n){return n&&n.__esModule?n:{default:n}}function s(){return(s=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n}).apply(this,arguments)}function c(n,e){return(c=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(n,e){return n.__proto__=e,n})(n,e)}},82790:function(n,e,t){"use strict";t.d(e,{Z:function(){return o}});var r=t(4696),a=(0,t(63458).Z)("domain","range","reverse","clamp","interpolate","nice","round");function o(n){return a((0,r.Z)(),n)}},87520:function(n,e,t){"use strict";t.d(e,{Nb:function(){return p},SO:function(){return f},jv:function(){return m},ve:function(){return y},aJ:function(){return x},kn:function(){return h}});var r=t(38764),a=t(79493),o=t(79767),i=t(15001),s=t(8329),c=t(98926),l=t(19616),d=t(42679),u=t(70271);function p(n){var e=void 0===n?{}:n,t=e.innerRadius,a=e.outerRadius,o=e.cornerRadius,i=e.startAngle,s=e.endAngle,c=e.padAngle,d=e.padRadius,u=(0,r.Z)();return null!=t&&(0,l.Z)(u.innerRadius,t),null!=a&&(0,l.Z)(u.outerRadius,a),null!=o&&(0,l.Z)(u.cornerRadius,o),null!=i&&(0,l.Z)(u.startAngle,i),null!=s&&(0,l.Z)(u.endAngle,s),null!=c&&(0,l.Z)(u.padAngle,c),null!=d&&(0,l.Z)(u.padRadius,d),u}function f(n){var e=void 0===n?{}:n,t=e.x,r=e.x0,o=e.x1,i=e.y,s=e.y0,c=e.y1,d=e.defined,u=e.curve,p=(0,a.Z)();return t&&(0,l.Z)(p.x,t),r&&(0,l.Z)(p.x0,r),o&&(0,l.Z)(p.x1,o),i&&(0,l.Z)(p.y,i),s&&(0,l.Z)(p.y0,s),c&&(0,l.Z)(p.y1,c),d&&p.defined(d),u&&p.curve(u),p}function m(n){var e=void 0===n?{}:n,t=e.x,r=e.y,a=e.defined,i=e.curve,s=(0,o.Z)();return t&&(0,l.Z)(s.x,t),r&&(0,l.Z)(s.y,r),a&&s.defined(a),i&&s.curve(i),s}function y(n){var e=void 0===n?{}:n,t=e.startAngle,r=e.endAngle,a=e.padAngle,o=e.value,s=e.sort,c=e.sortValues,d=(0,i.Z)();return(null===s||null!=s)&&d.sort(s),(null===c||null!=c)&&d.sortValues(c),null!=o&&d.value(o),null!=a&&(0,l.Z)(d.padAngle,a),null!=t&&(0,l.Z)(d.startAngle,t),null!=r&&(0,l.Z)(d.endAngle,r),d}function x(n){var e=void 0===n?{}:n,t=e.angle,r=e.radius,a=e.defined,o=e.curve,i=(0,s.Z)();return t&&(0,l.Z)(i.angle,t),r&&(0,l.Z)(i.radius,r),a&&i.defined(a),o&&i.curve(o),i}function h(n){var e=n.keys,t=n.value,r=n.order,a=n.offset,o=(0,c.Z)();return e&&o.keys(e),t&&(0,l.Z)(o.value,t),r&&o.order((0,d.ZP)(r)),a&&o.offset((0,u.ZP)(a)),o}},19616:function(n,e,t){"use strict";function r(n,e){n(e)}t.d(e,{Z:function(){return r}})},70271:function(n,e,t){"use strict";t.d(e,{nW:function(){return c},ed:function(){return l},ZP:function(){return d}});var r=t(22254),a=t(76751),o=t(90541),i=t(36538),s=t(34928),c={expand:r.Z,diverging:a.Z,none:o.Z,silhouette:i.Z,wiggle:s.Z},l=Object.keys(c);function d(n){return n&&c[n]||c.none}},42679:function(n,e,t){"use strict";t.d(e,{un:function(){return c},s2:function(){return l},ZP:function(){return d}});var r=t(19721),a=t(82564),o=t(12197),i=t(81182),s=t(40277),c={ascending:r.Z,descending:a.Z,insideout:o.Z,none:i.Z,reverse:s.Z},l=Object.keys(c);function d(n){return n&&c[n]||c.none}},84698:function(n,e,t){"use strict";function r(n,e){(null==e||e>n.length)&&(e=n.length);for(var t=0,r=new Array(e);t<e;t++)r[t]=n[t];return r}t.d(e,{Z:function(){return r}})},7245:function(n,e,t){"use strict";t.d(e,{Z:function(){return a}});var r=t(84698);function a(n,e){if(n){if("string"===typeof n)return(0,r.Z)(n,e);var t=Object.prototype.toString.call(n).slice(8,-1);return"Object"===t&&n.constructor&&(t=n.constructor.name),"Map"===t||"Set"===t?Array.from(n):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?(0,r.Z)(n,e):void 0}}}},function(n){n.O(0,[9774,1603,5592,5450,9097,377,4696,4930,5868,4735,1028,3136,8231,6543,764,155,6634,9582,6947,2888,179],(function(){return e=94385,n(n.s=e);var e}));var e=n.O();_N_E=e}]);